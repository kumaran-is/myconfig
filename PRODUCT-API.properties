server.port=9002
#spring.datasource.url=jdbc:mysql://localhost:3306/employee
#spring.datasource.username=root
#spring.datasource.password=kumaran1
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.format_sql=true

#logging.level.org.hibernate.SQL=ERROR
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#server.error.include-message=always


#transaction logs will start appearing, to understand transactional related issues
logging.level.org.springframework.transaction.interceptor=TRACE
# To fix this issue : No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor 
#spring.jackson.serialization.fail-on-empty-beans=false


#springdoc.api-docs.groups.enabled=true
#springdoc.swagger-ui.path=/swagger-doc/swagger-ui.html
#springdoc.api-docs.path=/swagger-doc/v3/api-docs


# server.address=my_custom_ip

# control the size of the client request thread pool default is 200
#server.tomcat.threads.max=300

#to set the server connection timeout
#server.connection-timeout=5s

#maximum size of a request header
# server.max-http-header-size=8KB

# maximum size of a request body
# server.tomcat.max-swallow-size=2MB

#maximum size of the whole post request:
# server.tomcat.max-http-post-size=2MB



# custom property to test reloading of configurations using Spring cloud bus without restarting the micro-services
#com.employee.microservice.prop=employee1